#include<bits/stdc++.h> 
//读入函数  返回结果数组  返回值为数字对（x,y）的个数 参数数组为结果数组
/*int input( int arr[800][2])
{
	int aCount = 0;
	int a[83];
	int i =0;
	int n1,n2;
	int endFile ;
    FILE *fpr = fopen("D:\\spot.txt","r");  

	fscanf(fpr,"%d%d",arr[0],arr[1]);
	printf("%s %s\n",arr[0],arr[1]);
	//while( EOF != endFile && fpr != NULL )
	while( EOF!=fscanf(fpr,"%d%d",&n1,&n2))//读取文件的一行的x,y值 ，并判断是否结束
	{
		for(i=0;i<800;i++)
		{
			if(a[i][0])
			for(i=0; i<10; i++)
    a[i][3]=a[i][1]/a[i][2];
		}
	}*/
int main()
{
	double a[800][3]={
0,0,1,
0,0,1,
0,0,1,
0,0,1,
0,-0.166666667,1,
0,-0.166666667,1,
0,0.064516129,1,
0,0,1,
0,0.073170732,1,
0,0.129032258,1,
0,0.037037037,1,
0,0.037037037,1,
1,0,1,
1,0.090909091,1,
1,0.090909091,1,
1,-0.04,1,
1,-0.04,1,
1,0,1,
1,0,1,
1,0.073170732,1,
1,0.073170732,1,
1,0.073170732,1,
1,0.073170732,1,
1,-0.217391304,1,
1,-0.217391304,1,
2,-0.166666667,1,
2,-0.166666667,1,
2,-0.166666667,1,
2,-0.166666667,1,
2,-0.166666667,1,
2,-0.166666667,1,
2,0.073170732,1,
2,0.073170732,1,
2,0.073170732,1,
2,-0.103448276,1,
2,-0.103448276,1,
2,-0.217391304,1,
2,-0.217391304,1,
2,0.620689655,1,
2,0.620689655,1,
2,0.620689655,1,
2,0.620689655,1,
2,0.129032258,1,
2,0.129032258,1,
2,0.129032258,1,
2,0.037037037,1,
2,0.037037037,1,
3,0,1,
3,0,1,
3,-0.166666667,1,
3,0.064516129,1,
3,0.090909091,1,
3,0.090909091,1,
3,0.090909091,1,
3,-0.04,1,
3,0,1,
3,0.6,1,
3,0,1,
3,0,1,
3,0.073170732,1,
3,-0.103448276,1,
3,0.485714286,1,
3,0.485714286,1,
3,0.485714286,1,
3,-0.217391304,1,
3,-0.217391304,1,
3,0.620689655,1,
3,0.037037037,1,
4,0.064516129,1,
4,0.090909091,1,
4,0.090909091,1,
4,0.090909091,1,
4,-0.04,1,
4,0,1,
4,0.485714286,1,
4,0.485714286,1,
4,0.485714286,1,
4,0.620689655,1,
4,0.129032258,1,
4,0.129032258,1,
4,0.129032258,1,
4,0.129032258,1,
5,-0.166666667,1,
5,-0.04,1,
5,0.6,1,
5,0,1,
5,0.073170732,1,
5,0.073170732,1,
5,0.073170732,1,
5,-0.103448276,1,
5,0.485714286,1,
5,0.129032258,1,
6,0.064516129,1,
6,-0.04,1,
6,0,1,
6,0,1,
6,0,1,
6,0.6,1,
6,0,1,
6,0,1,
6,0.073170732,1,
6,-0.103448276,1,
6,0.485714286,1,
6,0.037037037,1,
7,0,1,
7,-0.166666667,1,
7,0.064516129,1,
7,0.064516129,1,
7,-0.04,1,
7,0.6,1,
7,0.6,1,
7,0.6,1,
7,0.6,1,
7,0.073170732,1,
7,0.073170732,1,
7,0.485714286,1,
7,0.485714286,1,
7,0.485714286,1,
7,0.620689655,1,
7,0.620689655,1,
7,0.620689655,1,
7,0.037037037,1,
7,0.037037037,1,
7,0.037037037,1,
8,0,1,
8,-0.166666667,1,
8,0.064516129,1,
8,0.090909091,1,
8,0.090909091,1,
8,0.090909091,1,
8,0.090909091,1,
8,0,1,
8,0,1,
8,0,1,
8,0.073170732,1,
8,0.073170732,1,
8,0.620689655,1,
8,0.037037037,1,
9,0,1,
9,-0.166666667,1,
9,-0.166666667,1,
9,-0.04,1,
9,0.6,1,
9,0,1,
9,0.073170732,1,
9,-0.217391304,1,
9,-0.217391304,1,
9,0.620689655,1,
10,0,1,
10,0.090909091,1,
10,0.090909091,1,
10,0.090909091,1,
10,0.090909091,1,
10,0.090909091,1,
10,0,1,
10,0.6,1,
10,0.6,1,
10,0.6,1,
10,0,1,
10,0.485714286,1,
10,-0.217391304,1,
10,0.620689655,1,
11,0,1,
11,0.064516129,1,
11,-0.04,1,
11,-0.04,1,
11,0,1,
11,0.073170732,1,
11,0.073170732,1,
11,0.073170732,1,
11,-0.103448276,1,
11,0.485714286,1,
11,0.485714286,1,
11,0.129032258,1,
12,0,1,
12,-0.166666667,1,
12,-0.166666667,1,
12,0.6,1,
12,0.073170732,1,
12,0.073170732,1,
12,0.073170732,1,
12,-0.103448276,1,
12,0.129032258,1,
12,0.037037037,1,
12,0.037037037,1,
12,0.037037037,1,
12,0.037037037,1,
13,0,1,
13,-0.166666667,1,
13,0,1,
13,0.6,1,
13,0.6,1,
13,0.073170732,1,
13,0.073170732,1,
13,0.073170732,1,
13,0.485714286,1,
13,0.485714286,1,
13,0.620689655,1,
13,0.037037037,1,
14,0,1,
14,0,1,
14,-0.166666667,1,
14,0.090909091,1,
14,0.090909091,1,
14,-0.04,1,
14,-0.04,1,
14,-0.04,1,
14,0,1,
14,-0.103448276,1,
14,-0.103448276,1,
14,0.485714286,1,
14,0.129032258,1,
15,0,1,
15,0,1,
15,-0.166666667,1,
15,0.090909091,1,
15,0.090909091,1,
15,0.090909091,1,
15,-0.04,1,
15,0,1,
15,0,1,
15,0,1,
15,0.6,1,
15,0.6,1,
15,0,1,
15,-0.103448276,1,
15,-0.103448276,1,
15,-0.103448276,1,
15,0.485714286,1,
15,0.485714286,1,
15,0.037037037,1,
15,0.037037037,1,
16,0,1,
16,0,1,
16,0.485714286,1,
16,0.485714286,1,
16,0.485714286,1,
16,0.620689655,1,
16,0.129032258,1,
16,0.129032258,1,
17,0,1,
17,0,1,
17,0.064516129,1,
17,0.090909091,1,
17,-0.04,1,
17,0,1,
17,0.6,1,
17,0.6,1,
17,0.073170732,1,
17,0.073170732,1,
17,-0.103448276,1,
17,0.485714286,1,
17,-0.217391304,1,
17,-0.217391304,1,
17,0.620689655,1,
17,0.037037037,1,
17,0.037037037,1,
18,-0.166666667,1,
18,-0.166666667,1,
18,0.090909091,1,
18,0,1,
18,0,1,
18,0.073170732,1,
18,0.073170732,1,
18,0.073170732,1,
18,0.073170732,1,
18,0.073170732,1,
18,0.485714286,1,
18,0.485714286,1,
18,0.485714286,1,
18,0.620689655,1,
18,0.620689655,1,
18,0.129032258,1,
18,0.129032258,1,
18,0.037037037,1,
19,-0.166666667,1,
19,-0.166666667,1,
19,0.090909091,1,
19,0.090909091,1,
19,0.090909091,1,
19,0.090909091,1,
19,-0.04,1,
19,0,1,
19,0.6,1,
19,0,1,
19,0.485714286,1,
19,-0.217391304,1,
19,0.620689655,1,
19,0.037037037,1,
20,0,1,
20,-0.04,1,
20,0,1,
20,0.6,1,
20,0,1,
20,0.073170732,1,
20,0.073170732,1,
20,-0.103448276,1,
20,-0.103448276,1,
20,-0.103448276,1,
20,0.485714286,1,
20,0.620689655,1,
20,0.037037037,1,
20,0.037037037,1,
20,0.037037037,1,
21,0,1,
21,0,1,
21,0,1,
21,0,1,
21,0,1,
21,0.064516129,1,
21,0.064516129,1,
21,0,1,
21,0.6,1,
21,0.6,1,
21,0.6,1,
21,0.6,1,
21,0.485714286,1,
21,0.485714286,1,
21,0.485714286,1,
21,0.485714286,1,
21,0.620689655,1,
21,0.620689655,1,
21,0.620689655,1,
21,0.037037037,1,
22,0,1,
22,0,1,
22,-0.166666667,1,
22,0.064516129,1,
22,0.090909091,1,
22,-0.04,1,
22,-0.04,1,
22,0,1,
22,0.6,1,
22,0.6,1,
22,0.485714286,1,
22,-0.217391304,1,
22,0.037037037,1,
23,-0.04,1,
23,0,1,
23,0,1,
23,0.620689655,1,
23,0.037037037,1,
23,0.037037037,1,
24,0,1,
24,-0.166666667,1,
24,-0.166666667,1,
24,0.064516129,1,
24,0.064516129,1,
24,0.090909091,1,
24,0.090909091,1,
24,0.090909091,1,
24,-0.04,1,
24,0,1,
24,0,1,
24,0,1,
24,0.073170732,1,
24,0.073170732,1,
24,0.073170732,1,
24,-0.103448276,1,
24,-0.217391304,1,
24,-0.217391304,1,
24,0.620689655,1,
24,0.129032258,1,
24,0.129032258,1,
25,0,1,
25,0,1,
25,-0.0,4,1,
25,-0.04,1,
25,0,1,
25,0.073170732,1,
25,-0.103448276,1,
25,-0.217391304,1,
25,-0.217391304,1,
26,0,1,
26,0.090909091,1,
26,-0.04,1,
26,0,1,
26,0,1,
26,0,1,
26,0.073170732,1,
26,0.073170732,1,
26,-0.103448276,1,
26,-0.103448276,1,
26,-0.217391304,1,
26,0.037037037,1,
27,0,1,
27,0,1,
27,0,1,
27,0,1,
27,0.6,1,
27,0.073170732,1,
27,0.073170732,1,
27,0.485714286,1,
27,-0.217391304,1,
27,0.129032258,1,
27,0.129032258,1,
28,0.090909091,1,
28,-0.04,1,
28,0,1,
28,0,1,
28,0.6,1,
28,0.485714286,1,
28,-0.217391304,1,
28,0.620689655,1,
29,-0.166666667,1,
29,-0.166666667,1,
29,0.090909091,1,
29,-0.04,1,
29,0,1,
29,0,1,
29,-0.217391304,1,
29,0.620689655,1,
29,0.620689655,1,
29,0.620689655,1,
29,0.129032258,1,
29,0.037037037,1,
29,0.037037037,1,
30,-0.166666667,1,
30,0.090909091,1,
30,-0.04,1,
30,-0.04,1,
30,0,1,
30,0,1,
30,0,1,
30,0,1,
30,-0.103448276,1,
30,0.485714286,1,
30,-0.217391304,1,
30,0.620689655,1,
30,0.129032258,1,
31,0,1,
31,0,1,
31,-0.166666667,1,
31,-0.166666667,1,
31,0.064516129,1,
31,0.090909091,1,
31,0.090909091,1,
31,-0.04,1,
31,0,1,
31,0,1,
31,0.073170732,1,
31,0.485714286,1,
31,-0.217391304,1,
31,0.620689655,1,
32,0,1,
32,0,1,
32,0,1,
32,0.064516129,1,
32,0.064516129,1,
32,0.064516129,1,
32,0.064516129,1,
32,0.090909091,1,
32,-0.04,1,
32,-0.04,1,
32,0,1,
32,0,1,
32,0,1,
32,0,1,
32,0.6,1,
32,0.073170732,1,
32,-0.103448276,1,
32,-0.103448276,1,
32,0.485714286,1,
32,-0.217391304,1,
32,0.620689655,1,
32,0.129032258,1,
32,0.037037037,1,
33,-0.166666667,1,
33,0,1,
33,0.485714286,1,
33,0.620689655,1,
34,0,1,
34,-0.166666667,1,
34,0.064516129,1,
34,-0.04,1,
34,0.6,1,
34,0.6,1,
34,0,1,
34,0.073170732,1,
34,0.073170732,1,
34,0.073170732,1,
34,-0.103448276,1,
34,-0.103448276,1,
34,-0.103448276,1,
34,-0.103448276,1,
34,0.485714286,1,
34,0.485714286,1,
34,0.129032258,1,
34,0.037037037,1,
34,0.037037037,1,
34,0.037037037,1,
35,-0.166666667,1,
35,-0.166666667,1,
35,-0.166666667,1,
35,0.064516129,1,
35,0.090909091,1,
35,-0.04,1,
35,-0.04,1,
35,0,1,
35,0,1,
35,0.485714286,1,
35,0.037037037,1,
36,-0.04,1,
36,0,1,
36,0.073170732,1,
36,-0.103448276,1,
36,0.620689655,1,
36,0.620689655,1,
36,0.129032258,1,
36,0.037037037,1,
36,0.037037037,1,
37,-0.166666667,1,
37,-0.166666667,1,
37,-0.166666667,1,
37,-0.166666667,1,
37,-0.166666667,1,
37,0.064516129,1,
37,0.6,1,
37,0.073170732,1,
37,-0.103448276,1,
37,0.485714286,1,
37,-0.217391304,1,
37,0.620689655,1,
38,-0.166666667,1,
38,0.090909091,1,
38,0.090909091,1,
38,0.6,1,
38,0,1,
38,0.073170732,1,
38,-0.103448276,1,
38,0.485714286,1,
38,0.485714286,1,
38,-0.217391304,1,
38,0.129032258,1,
39,0.090909091,1,
39,-0.04,1,
39,0,1732,1,
39,0.485714286,1,
39,0.129032258,1,
39,0.037037037,1,
39,0.037037037,1,
40,0,1,
40,-0.166666667,1,
40,-0.166666667,1,
40,-0.166666667,1,
40,-0.166666667,1,
40,0.090909091,1,
40,0.090909091,1,
40,0.090909091,1,
40,0,1,
40,0,1,
40,0.485714286,1,
40,0.620689655,1,
40,0.129032258,1,
41,0,1,
41,0.064516129,1,
41,0.090909091,1,
41,0.090909091,1,
41,0.090909091,1,
41,-0.04,1,
41,0,1,
41,0.6,1,
41,0.6,1,
41,0.6,1,
41,0,1,
41,0.073170732,1,
41,0.037037037,1,
42,0.064516129,1,
42,0.073170732,1,
42,0.073170732,1,
42,-0.103448276,1,
42,0.485714286,1,
42,0.485714286,1,
42,-0.217391304,1,
42,-0.217391304,1,
42,0.037037037,1,
42,0.037037037,1,
43,0,1,
43,0.064516129,1,
43,0.090909091,1,
43,0.090909091,1,
43,0,1,
43,0.6,1,
43,0.6,1,
43,0.6,1,
43,0,1,
43,0,1,
43,0,1,
43,0.073170732,1,
43,0.073170732,1,
43,-0.103448276,1,
43,0.485714286,1,
43,0.485714286,1,
43,0.485714286,1,
43,0.620689655,1,
43,0.129032258,1,
44,0,1,
44,-0.166666667,1,
44,0.064516129,1,
44,0.064516129,1,
44,0.064516129,1,
44,0.064516129,1,
44,0,1,
44,0,1,
44,0.073170732,1,
44,0.073170732,1,
44,-0.103448276,1,
44,-0.217391304,1,
44,0.620689655,1,
44,0.620689655,1,
44,0.129032258,1,
44,0.129032258,1,
44,0.129032258,1,
45,0,1,
45,0.064516129,1,
45,0.090909091,1,
45,0.090909091,1,
45,-0.04,1,
45,0.073170732,1,
45,-0.103448276,1,
45,0.620689655,1,
45,0.129032258,1,
45,0.037037037,1,
46,-0.04,1,
46,-0.04,1,
46,0.6,1,
46,0,1,
46,0.073170732,1,
46,-0.103448276,1,
46,0.485714286,1,
46,0.129032258,1,
46,0.129032258,1,
47,0,1,
47,-0.166666667,1,
47,0.064516129,1,
47,-0.04,1,
47,-0.04,1,
47,-0.04,1,
47,0.6,1,
47,0.6,1,
47,0.073170732,1,
47,0.073170732,1,
47,0.485714286,1,
47,0.485714286,1,
47,0.129032258,1,
48,0,1,
48,0,1,
48,-0.166666667,1,
48,-0.166666667,1,
48,-0.166666667,1,
48,0.090909091,1,
48,-0.04,1,
48,0,1,
48,0,1,
48,0,1,
48,0.073170732,1,
48,0.073170732,1,
48,0.073170732,1,
48,0.073170732,1,
48,0.073170732,1,
48,-0.103448276,1,
48,0.485714286,1,
48,-0.217391304,1,
48,0.620689655,1,
48,0.129032258,1,
49,-0.166666667,1,
49,0.064516129,1,
49,0.090909091,1,
49,0.6,1,
49,0.073170732,1,
49,-0.103448276,1,
49,-0.103448276,1,
49,0.620689655,1,
49,0.620689655,1,
49,0.129032258,1,
49,0.129032258,1,
50,0,1,
50,-0.04,1,
50,-0.04,1,
50,0,1,
50,0,1,
50,0.6,1,
50,0.6,1,
50,0,1,
50,0.073170732,1,
50,0.485714286,1,
50,-0.217391304,1,
51,0.6,1,
52,0.064516129,1,
52,0.073170732,1,
52,0.037037037,1,
53,0.129032258,1,
53,0.037037037,1,
54,0,1,
54,0.6,1,
54,0.6,1,
54,0.6,1,
54,0.6,1,
54,0,1,
54,0.485714286,1,
54,0.620689655,1,
54,0.620689655,1,
54,0.620689655,1,
55,0,1,
55,-0.04,1,
55,0.073170732,1,
56,0,1,
56,0.620689655,1,
57,0.620689655,1,
58,-0.103448276,1,
59,-0.103448276,1,
60,0,1,
60,0.6,1,
60,-0.103448276,1,
61,-0.217391304,1,
62,0,1,
62,-0.166666667,1,
62,-0.166666667,1,
62,-0.217391304,1,
63,0,1,
63,-0.103448276,1,
64,0,1,
64,-0.103448276,1,
65,-0.166666667,1,
65,0.6,1,
65,0,1,
65,0,1,
65,0.485714286,1,
66,0,1,
66,-0.166666667,1,
66,0.037037037,1,
67,-0.166666667,1,
67,-0.166666667,1,
67,-0.166666667,1,
67,0.064516129,1,
67,0.6,1,
67,0.6,1,
67,0.6,1,
67,0.6,1,
67,0.6,1,
67,0.6,1,
67,0.485714286,1,
67,0.620689655,1,
67,0.620689655,1,
67,0.620689655,1,
67,0.620689655,1,
68,0,1,
68,0.064516129,1,
68,-0.103448276,1,
68,-0.217391304,1,
69,0,1,
69,0.090909091,1,
69,0,1,
69,0.485714286,1,
70,0.073170732,1,
70,-0.103448276,1,
70,-0.103448276,1,
71,0,1,
71,0.064516129,1,
71,0,1,
71,-0.103448276,1,
71,0.129032258,1,
72,0.485714286,1,
72,0.129032258,1,
73,0.037037037,1,
74,0,1,
74,-0.103448276,1,
75,0.064516129,1,
75,0.485714286,1,
76,0.064516129,1,
76,0,1,
77,-0.166666667,1,
77,0.090909091,1,
77,0.090909091,1,
77,0,1,
78,0.064516129,1,
78,-0.04,1,
78,0.6,1,
78,-0.217391304,1,
79,-0.103448276,1,
79,0.485714286,1,
80,0.090909091,1,
80,-0.04,1,
80,0.6,1,
80,0.485714286,1,
81,-0.04,1,
81,0.6,1,
81,0.6,1,
81,0.6,1,
81,0.485714286,1,
82,0,1,
82,0.064516129,1,
82,0.090909091,1,
82,0.090909091,1,
82,0.090909091,1,
82,0.6,1,
82,-0.217391304,1,
};
	
	double ss[100]={0};
	int i,j,k;
	for(i=0;i<800;i++)
	{
		if(a[i][0]==0)
		ss[0]+=a[i][1];
		else if(a[i][0]==1)
		ss[1]+=a[i][1];
		else if(a[i][0]==2)
		ss[2]+=a[i][1];
		else if(a[i][0]==3)
		ss[3]+=a[i][1];
		else if(a[i][0]==4)
		ss[4]+=a[i][1];
		else if(a[i][0]==5)
		ss[5]+=a[i][1];
		else if(a[i][0]==6)
		ss[6]+=a[i][1];
		else if(a[i][0]==7)
		ss[7]+=a[i][1];
		else if(a[i][0]==8)
		ss[8]+=a[i][1];
		else if(a[i][0]==9)
		ss[9]+=a[i][1];
		else if(a[i][0]==10)
		ss[10]+=a[i][1];
		else if(a[i][0]==11)
		ss[11]+=a[i][1];
		else if(a[i][0]==12)
		ss[12]+=a[i][1];
		else if(a[i][0]==13)
		ss[13]+=a[i][1];
		else if(a[i][0]==14)
		ss[14]+=a[i][1];
		else if(a[i][0]==15)
		ss[15]+=a[i][1];
		else if(a[i][0]==16)
		ss[16]+=a[i][1];
		else if(a[i][0]==17)
		ss[17]+=a[i][1];
		else if(a[i][0]==18)
		ss[18]+=a[i][1];
		else if(a[i][0]==19)
		ss[19]+=a[i][1];
		else if(a[i][0]==20)
		ss[20]+=a[i][1];
		else if(a[i][0]==21)
		ss[21]+=a[i][1];
		else if(a[i][0]==22)
		ss[22]+=a[i][1];
		else if(a[i][0]==23)
		ss[23]+=a[i][1];
		else if(a[i][0]==24)
		ss[24]+=a[i][1];
		else if(a[i][0]==25)
		ss[25]+=a[i][1];
		else if(a[i][0]==26)
		ss[26]+=a[i][1];
		else if(a[i][0]==27)
		ss[27]+=a[i][1];
		else if(a[i][0]==28)
		ss[28]+=a[i][1];
		else if(a[i][0]==29)
		ss[29]+=a[i][1];
		else if(a[i][0]==30)
		ss[30]+=a[i][1];
		else if(a[i][0]==31)
		ss[31]+=a[i][1];
		else if(a[i][0]==32)
		ss[32]+=a[i][1];
		else if(a[i][0]==33)
		ss[33]+=a[i][1];
		else if(a[i][0]==34)
		ss[34]+=a[i][1];
		else if(a[i][0]==35)
		ss[35]+=a[i][1];
		else if(a[i][0]==36)
		ss[36]+=a[i][1];
		else if(a[i][0]==37)
		ss[37]+=a[i][1];
		else if(a[i][0]==38)
		ss[38]+=a[i][1];
		else if(a[i][0]==39)
		ss[39]+=a[i][1];
		else if(a[i][0]==40)
		ss[40]+=a[i][1];
		else if(a[i][0]==41)
		ss[41]+=a[i][1];
		else if(a[i][0]==42)
		ss[42]+=a[i][1];
		else if(a[i][0]==43)
		ss[43]+=a[i][1];
		else if(a[i][0]==44)
		ss[44]+=a[i][1];
		else if(a[i][0]==45)
		ss[45]+=a[i][1];
		else if(a[i][0]==46)
		ss[46]+=a[i][1];
		else if(a[i][0]==47)
		ss[47]+=a[i][1];
		else if(a[i][0]==48)
		ss[48]+=a[i][1];
		else if(a[i][0]==49)
		ss[49]+=a[i][1];
		else if(a[i][0]==50)
		ss[50]+=a[i][1];
		else if(a[i][0]==51)
		ss[51]+=a[i][1];
		else if(a[i][0]==52)
		ss[52]+=a[i][1];
		else if(a[i][0]==53)
		ss[53]+=a[i][1];
		else if(a[i][0]==54)
		ss[54]+=a[i][1];
		else if(a[i][0]==55)
		ss[55]+=a[i][1];
		else if(a[i][0]==56)
		ss[56]+=a[i][1];
		else if(a[i][0]==57)
		ss[57]+=a[i][1];
		else if(a[i][0]==58)
		ss[58]+=a[i][1];
		else if(a[i][0]==59)
		ss[59]+=a[i][1];
		else if(a[i][0]==60)
		ss[60]+=a[i][1];
		else if(a[i][0]==61)
		ss[61]+=a[i][1];
		else if(a[i][0]==62)
		ss[62]+=a[i][1];
		else if(a[i][0]==63)
		ss[63]+=a[i][1];
		else if(a[i][0]==64)
		ss[64]+=a[i][1];
		else if(a[i][0]==65)
		ss[65]+=a[i][1];
		else if(a[i][0]==66)
		ss[66]+=a[i][1];
		else if(a[i][0]==67)
		ss[67]+=a[i][1];
		else if(a[i][0]==68)
		ss[68]+=a[i][1];
		else if(a[i][0]==69)
		ss[69]+=a[i][1];
		else if(a[i][0]==70)
		ss[70]+=a[i][1];
		else if(a[i][0]==71)
		ss[71]+=a[i][1];
		else if(a[i][0]==72)
		ss[72]+=a[i][1];
		else if(a[i][0]==73)
		ss[73]+=a[i][1];
		else if(a[i][0]==74)
		ss[74]+=a[i][1];
		else if(a[i][0]==75)
		ss[75]+=a[i][1];
		else if(a[i][0]==76)
		ss[76]+=a[i][1];
		else if(a[i][0]==77)
		ss[77]+=a[i][1];
		else if(a[i][0]==78)
		ss[78]+=a[i][1];
		else if(a[i][0]==79)
		ss[79]+=a[i][1];
		else if(a[i][0]==80)
		ss[80]+=a[i][1];
		else if(a[i][0]==81)
		ss[81]+=a[i][1];
		else if(a[i][0]==82)
		ss[82]+=a[i][1];
		
		
	}
	for(i=0;i<82;i++)
	printf("%lf\n",ss[i]);
}
